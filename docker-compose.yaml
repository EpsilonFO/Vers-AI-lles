#version: "4"

services:
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    ports:
      - "8001:8001"
    volumes:
      - ./backend:/app/backend
      - ./mcp_servers:/app/mcp_servers
    environment:
      - MISTRAL_API_KEY=${MISTRAL_API_KEY}
      - EMBEDDING_MODEL=${EMBEDDING_MODEL}
      - MISTRAL_MODEL=${MISTRAL_MODEL}
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
      - OPEN_METEO_BASE=${OPEN_METEO_BASE}
      - OSM_NOMINATIM_URL=${OSM_NOMINATIM_URL}
      - OSRM_BASE_URL=${OSRM_BASE_URL}
      - MAPBOX_TOKEN=${MAPBOX_TOKEN}
      - ORS_API_KEY=${ORS_API_KEY}
      - LOCATIONIQ_KEY=${LOCATIONIQ_KEY}
      - GEOAPIFY_KEY=${GEOAPIFY_KEY}
      - OSM_CONTACT_EMAIL=${OSM_CONTACT_EMAIL}
    depends_on:
      - mcp-osm
      - mcp-weather
    restart: unless-stopped

  frontend:
    build: ./frontend
    ports:
      - "8501:8501"
    volumes:
      - ./frontend:/app
    restart: unless-stopped
    depends_on:
      - backend

  mcp-osm:
    build:
      context: .
      dockerfile: mcp_servers/Dockerfile
    volumes:
      - ./mcp_servers:/app/mcp_servers
    environment:
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
      - MAPBOX_TOKEN=${MAPBOX_TOKEN}
      - ORS_API_KEY=${ORS_API_KEY}
      - LOCATIONIQ_KEY=${LOCATIONIQ_KEY}
      - GEOAPIFY_KEY=${GEOAPIFY_KEY}
      - OSM_CONTACT_EMAIL=${OSM_CONTACT_EMAIL}
    restart: unless-stopped

  mcp-weather:
    build:
      context: .
      dockerfile: mcp_servers/Dockerfile
    volumes:
      - ./mcp_servers:/app/mcp_servers
    environment:
      - OPENWEATHER_API_KEY=${OPENWEATHER_API_KEY}
    restart: unless-stopped
